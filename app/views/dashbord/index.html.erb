<%= render partial: 'components/header' %>
<%= render partial: 'components/sidebar' %>
<script src="vendor/apexcharts.js"></script>

<style>
div.card{
  margin-bottom: 40px;
}     
@media (max-width: 767px) {
  #alat{
    float: none;
    width: 100%;
  }
  #all-monitoring{
    width: 100%;
  }
}
select{
  display:inline-block;
}
/* monitoring baru */
#judul{
  color: rgba(13, 110, 253, 0.9); 
  text-align: center;
  font-size: 20px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  margin-top: 10px;
}
.monitoring{
  margin-right: 20px;
}
#alat h5 {
  color: rgba(13, 110, 253, 0.9);
}
/* sw */
.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}
input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}
</style>
      <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2" >Monitoring Realtime</h1>
      </div>
      <!-- Buget Monitroing -->
      <div class="row">
        <div class="col">
          <div class="card">
            <div class="card-title border-bottom justify-content-between flex-wrap flex-md-nowrap align-items-center pt-2 pb-2 mb-3 mx-3">
              <div class="row">
                <div class="col">
                  <h5 style="color: rgba(13, 110, 253, 0.9);"><i class="fa fa-microchip"></i> Device</h5>
                </div>
                <div class="col">
                  <select id="pilih-alat" class="form-select" onchange="pilih_alat()">
                    <option value="off" selected>PILIH ALAT</option>
                    <% if @data_alat.present? %>
                      <% @data_alat.each do |alat| %>
                                <option value="<%= alat['id']%>" ><%= alat['nama_alat']%></option>
                      <% end %>
                      <%else%>
                      <option value="off">Tidak Ada Alat Aktif</option>
                  <% end %>
                  </select>
                </div>
              </div>
            </div>

            <div class="card-body">
              <div class="card mb-2" >
                <div class="row">
                  <div id="alat" class="col-8">
                    <div style="margin-left: 30px; margin-top: 20px; margin-right: 30px;">
                      <h5><i class="fa fa-angle-double-right"></i><span style="margin-left: 5px;" id="nama_alat"> Pilih Alat</span></h5>
                      <hr>
                      <div>
                        <h6>ID : <span id="id">-</span></h6>                      
                        <h6><i class="fa fa-map-marker"> :</i><span style="margin-left: 5px;" id="lokasi">-</span></h6>
                      </div>
                    </div>
                  </div>
                  <div id="all-monitoring" class="col-4">
                    <div style="display: flex; justify-content:center;">
                      <div class="monitoring" style="float: left; width: 100px;">
                        <div id="chart-suhu" style="float: left; width: fit-content;">
                        </div>
                      </div>
                      <div class="monitoring" style="width: 100px;">
                        <div id="chart-kelembapan" style="float: left; width: fit-content;">
                        </div>
                      </div>
                    </div>
                    <div style="display: flex; justify-content:center;">
                      <div class="monitoring" style="float: left; width: 100px;">
                        <div id="chart-kualitasudara" style="float: left; width: fit-content;">
                        </div>
                      </div>
                      <div class="monitoring" style="width: 100px;">
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div style="display: flex; justify-content: flex-end;">
                <label class="switch">
                  <input id="switch" type="checkbox" value="off" onchange="realtime()" disabled>
                  <span class="slider round"></span>
                </label>
              </div>
              <hr> 
              <h3 id="judul" class="text-center">MONITORING REAL-TIME</h3>  
              <div id="chart-real-time">
              </div>
          </div>           
          </div>
        </div>
      </div>
    </div>

    <!-- Radial-Bar -->
    <script>
    var optionsSuhu = {
          series: [0],
          chart: {
          height: 150,
          type: 'radialBar',
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
             hollow: {
              margin: 0,
              size: '65%',
              background: '#fff',
              image: undefined,
              imageOffsetX: 0,
              imageOffsetY: 0,
              position: 'front',
              dropShadow: {
                enabled: true,
                top: 2,
                left: 0,
                blur: 4,
                opacity: 0.24
              }
            },
            track: {
              background: '#fff',
              strokeWidth: '67%',
              margin: 0,
              dropShadow: {
                enabled: true,
                top: -3,
                left: 0,
                blur: 2,
                opacity: 0.25
              }
            },
            dataLabels: {
              show: true,
              name: {
                offsetY: -10,
                show: true,
                color: '#888',
                fontSize: '10px'
              },
              value: {
                formatter: function(val) {
                  return parseInt(val);
                },
                offsetY: -3,
                color: '#111',
                fontSize: '20px',
                show: true,
              }
            }
          }
        },
        fill: {
          type: 'gradient',
          gradient: {
            shade: 'dark',
            type: 'horizontal',
            shadeIntensity: 0.5,
            gradientToColors: ['#ABE5A1'],
            inverseColors: true,
            opacityFrom: 1,
            opacityTo: 1,
            stops: [0, 100]
          }
        },
        stroke: {
          lineCap: 'round'
        },
        labels: ['Suhu'],
        };


    var optionsKelmbapan = {
          series: [0],
          chart: {
          height: 150,
          type: 'radialBar',
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
             hollow: {
              margin: 0,
              size: '65%',
              background: '#fff',
              image: undefined,
              imageOffsetX: 0,
              imageOffsetY: 0,
              position: 'front',
              dropShadow: {
                enabled: true,
                top: 2,
                left: 0,
                blur: 4,
                opacity: 0.24
              }
            },
            track: {
              background: '#fff',
              strokeWidth: '67%',
              margin: 0,
              dropShadow: {
                enabled: true,
                top: -3,
                left: 0,
                blur: 2,
                opacity: 0.25
              }
            },
            dataLabels: {
              show: true,
              name: {
                offsetY: -10,
                show: true,
                color: '#888',
                fontSize: '10px'
              },
              value: {
                formatter: function(val) {
                  return parseInt(val);
                },
                offsetY: -3,
                color: '#111',
                fontSize: '20px',
                show: true,
              }
            }
          }
        },
        fill: {
          type: 'gradient',
          gradient: {
            shade: 'dark',
            type: 'horizontal',
            shadeIntensity: 0.5,
            gradientToColors: ['#ABE5A1'],
            inverseColors: true,
            opacityFrom: 1,
            opacityTo: 1,
            stops: [0, 100]
          }
        },
        stroke: {
          lineCap: 'round'
        },
        labels: ['Kelembapan'],
        };
        

    var optionskualitasUdara = {
          series: [0],
          chart: {
          height: 150,
          type: 'radialBar',
          toolbar: {
            show: false
          }
        },
        plotOptions: {
          radialBar: {
            startAngle: -135,
            endAngle: 225,
             hollow: {
              margin: 0,
              size: '65%',
              background: '#fff',
              image: undefined,
              imageOffsetX: 0,
              imageOffsetY: 0,
              position: 'front',
              dropShadow: {
                enabled: true,
                top: 2,
                left: 0,
                blur: 4,
                opacity: 0.24
              }
            },
            track: {
              background: '#fff',
              strokeWidth: '67%',
              margin: 0,
              dropShadow: {
                enabled: true,
                top: -3,
                left: 0,
                blur: 2,
                opacity: 0.25
              }
            },
            dataLabels: {
              show: true,
              name: {
                offsetY: -10,
                show: true,
                color: '#888',
                fontSize: '10px'
              },
              value: {
                formatter: function(val) {
                  return parseInt(val*12);
                },
                offsetY: -3,
                color: '#111',
                fontSize: '20px',
                show: true,
              }
            }
          }
        },
        fill: {
          type: 'gradient',
          gradient: {
            shade: 'dark',
            type: 'horizontal',
            shadeIntensity: 0.5,
            gradientToColors: ['#ABE5A1'],
            inverseColors: true,
            opacityFrom: 1,
            opacityTo: 1,
            stops: [0, 100]
          }
        },
        stroke: {
          lineCap: 'round'
        },
        labels: ['Air Quality']
        };
    
        var suhuChart = new ApexCharts(document.querySelector("#chart-suhu"), optionsSuhu);
        suhuChart.render();
        var kelembapanChart = new ApexCharts(document.querySelector("#chart-kelembapan"), optionsKelmbapan);
        kelembapanChart.render();

        var kualitasudaraChart = new ApexCharts(document.querySelector("#chart-kualitasudara"), optionskualitasUdara);
        kualitasudaraChart.render();
        
    
     </script>
    <!-- REAL-TIME CHART -->
    <script>
      var dataKelembapan = [];
      var dataSuhu = [];
      var  dataAirQuality= [];
      var dataWaktu = []; 

      var options = {
          series: [{
            name: "Suhu",
            data: dataKelembapan.slice()
          },
          {
            name: "Kelembapan",
            data: dataSuhu.slice()
          },
          {
            name: "Air Quality",
            data: dataAirQuality.slice()
          }
          ],
          chart: {
          height: 350,
          type: 'line',
          animations: {
            enabled: true,
            easing: 'linear',
            dynamicAnimation: {
              speed: 1000
            }
          },
          zoom: {
            enabled: false
          },
          toolbar: {
            show: false
          }
        },
        dataLabels: {
          enabled: false
        },
        stroke: {
          curve: 'smooth'
        },
        xaxis: {
          categories: dataWaktu.slice(),
          range: 10,
        },
        yaxis: {
          max: 1200,
          min: 0
        },
        };
        var chart = new ApexCharts(document.querySelector("#chart-real-time"), options);
        chart.render();

    </script>


    <!-- Pilih Alat -->
    <script>

      var topic = "off";
      
      function pilih_alat() {
      id_alat = $('#pilih-alat').val();
      if ( id_alat !== "off"){
        $('#switch').prop("disabled", false);
        $.ajax({
          url: '/data_alat',
          type: 'POST',
          dataType: 'JSON',
          data: {id: id_alat},	
          success: function(res){
            topic = res.id_alat;
            $("#id").text(res.id);
            $("#lokasi").text(res.lokasi);
            $("#nama_alat").text(res.nama_alat);
          },
          error: function(xhr, status, error) {
            console.log(error);
          }
          })
      } else{
        $('#switch').prop("disabled", true);
        $("#id").text("-");
        $("#lokasi").text("-");
        $("#nama_alat").text("Pilih Alat");
      }
      }
    </script>

    <!-- Realtime Ajax -->
    <script>
      var status;
      function realtime(){
        status = $("#switch").val();
        if(status === "off" && topic !== "off") {
          $.ajax({
            url: '/mqtt/sub',
            type: 'GET',
            dataType: 'JSON',
            data: {topic: topic},	
            success: function(res){
              dataKelembapan.push(res.kelembapan);
              dataSuhu.push(res.suhu);
              dataAirQuality.push(res.airQuality);
              dataWaktu.push(res.time);
              chart.updateOptions({
              series: [{
                data: dataKelembapan
              },{
                data: dataSuhu
              },{
                data: dataAirQuality
              }
              ],
              xaxis:{
                categories: dataWaktu
              }
              });
              kelembapanChart.updateOptions({
                series: [res.kelembapan]
              });
              suhuChart.updateOptions({
                series: [res.suhu]
              });
              kualitasudaraChart.updateOptions({
                series: [res.airQuality/12]
              });
              
            },
            error: function(xhr, status, error) {
              console.error(error);
            }
          })
          startRealtime();
          $('#pilih-alat').prop("disabled", true);
          $("#switch").val("on");

        } else {

          stopRealtime();
          $('#pilih-alat').prop("disabled", false);
          $("#switch").val("off");
            dataKelembapan = [];
            dataSuhu = [];
            dataAirQuality = [];
            dataWaktu = []; 
            chart.updateOptions({
              series: [{
                data: dataKelembapan
              },{
                data: dataSuhu
              },{
                data: dataAirQuality
              }],
              xaxis:{
                categories: dataWaktu
              }
              });
              kelembapanChart.updateOptions({
                series: [0]
              });
              suhuChart.updateOptions({
                series: [0]
              });
              kualitasudaraChart.updateOptions({
                series: [0]
              })
          }
        }

        var intervalId;

        function startRealtime() {
          intervalId = setInterval(function() {            
              get_data();
          }, 5000); 
        }

        function stopRealtime() {
          clearInterval(intervalId);
        }
        
        function get_data() {
          var status_real = $("#switch").val();

          console.log(status_real);
          if (topic === undefined) {  
            clearInterval(intervalId);
          }else if(topic ==="off"){
            clearInterval(intervalId);
          } else if(status_real === undefined){
            clearInterval(intervalId);
          }else {
            $.ajax({
              url: '/mqtt/sub',
              type: 'GET',
              dataType: 'JSON',
              data: {topic: topic},	
              success: function(res){
                dataKelembapan.push(res.kelembapan);
                dataSuhu.push(res.suhu);
                dataAirQuality.push(res.airQuality);
                dataWaktu.push(res.time);
                chart.updateOptions({
                series: [{
                  data: dataKelembapan
                },{
                  data: dataSuhu
                },{
                  data: dataAirQuality
                }],
                xaxis:{
                  categories: dataWaktu
                }
                });
                kelembapanChart.updateOptions({
                  series: [res.kelembapan]
                });
                suhuChart.updateOptions({
                  series: [res.suhu]
                });
                kualitasudaraChart.updateOptions({
                  series: [res.airQuality/12]
                });
              },
              error: function(xhr, status, error) {
                console.error(error);
              }
            })
          }
        }
    </script>
<%= render partial: 'components/footer' %>